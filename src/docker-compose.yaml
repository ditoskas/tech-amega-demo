# Please refer https://aka.ms/HTTPSinContainer on how to setup an https developer certificate for your ASP .NET Core service.

version: '3.4'

#create a volume for the my sql container.To ensure Data persists after my sql container is stopped
volumes:
  datafiles:

services:
  #DataBase Service
  db:
    #Pull the latest mysql image
    image: mysql:8.0.22
    #Map port 3306 on the mysql container to port 3306 in the host
    ports:
      - "3306:3306"
    #Specify where the persisted Data should be stored
    volumes:
      - ./datafiles:/var/lib/mysql
      - ./sql-scripts/setup.sql:/docker-entrypoint-initdb.d/setup.sql
    restart: always
    #Specify Environment Variables for mysql
    environment: 
      MYSQL_ROOT_PASSWORD: mysql
      MYSQL_USER: amega
      MYSQL_PASSWORD: Am3ga!
      MYSQL_DATABASE: amega
  rabbitmq:
      image: rabbitmq:3-management-alpine
      container_name: 'rabbitmq'
      ports:
        - 5672:5672
        - 15672:15672
      volumes:
        - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
        - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
      environment: 
        RABBITMQ_DEFAULT_USER: amega
        RABBITMQ_DEFAULT_PASS: Am3ga!
    # networks:
    #     - custom_net
  #Api  Service
  api:
    build:
      context: .
      #Use the DockerFile in that Directory
      dockerfile: "/Presentation/Api/Dockerfile"
    #This Service Depends on the database service specifed above
    depends_on: 
      - db
    #Map port 8080 in the docker container to port 80 in the Api
    ports:
      - "8080:8080"
      - "8081:8081"
    restart: always
    #Specify Environment Variables for the Api Service
    environment: 
      - DBHOST=db
      - DBNAME=amega
      - DBUSER=amega
      - DBPASS=Am3ga!
      - ASPNETCORE_ENVIRONMENT=Development
  #web  Service
  web:
    build:
      context: .
      #Use the DockerFile in that Directory
      dockerfile: "/Presentation/web/Dockerfile"
    #This Service Depends on the database service specifed above
    depends_on: 
      - api
    #Map port 8083 in the docker container to port 80 in the web
    ports:
      - "8083:8080"
      - "8084:8084"
    restart: always
    #Specify Environment Variables for the web Service
    environment: 
      - ASPNETCORE_ENVIRONMENT=Development
  #push  Service
  push:
    build:
      context: .
      #Use the DockerFile in that Directory
      dockerfile: "/Presentation/PushService/Dockerfile"
    #This Service Depends on the database service specifed above
    depends_on: 
      - api
      - rabbitmq
    #Map port 8083 in the docker container to port 80 in the push
    ports:
      - "8086:8080"
    restart: always
    #Specify Environment Variables for the web Service
    environment: 
      - ASPNETCORE_ENVIRONMENT=Development
#   #Quotes Receiver Service
  quotes:
    build:
      context: .
      #Use the DockerFile in that Directory
      dockerfile: "/Presentation/QuotesReceiver/Dockerfile"
    #This Service Depends on the database service specifed above
    depends_on: 
      - rabbitmq
      - db
    #Map port 8083 in the docker container to port 80 in the push
    ports:
      - "8085:8080"
    restart: always
    #Specify Environment Variables for the web Service
    environment: 
      - ASPNETCORE_ENVIRONMENT=Development

#       networks:
#           - custom_net
# networks:
#   custom_net:
#     driver: bridge
